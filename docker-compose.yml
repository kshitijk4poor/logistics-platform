version: '3.8'

services:
  backend:
    build: .
    command: gunicorn app.main:app_sio -k eventlet -w 1 -b 0.0.0.0:8000
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - redis
      - kafka
      - celery_worker
      - celery_beat
    environment:
      - DATABASE_URL=postgresql://user:password@pgbouncer:6432/logistics
      - REDIS_URL=redis://redis:6379/0
      - KAFKA_URL=kafka:9092
      - SECRET_KEY=${SECRET_KEY}
      - ALGORITHM=${ALGORITHM}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - GOOGLE_MAPS_API_KEY=${GOOGLE_MAPS_API_KEY}

  celery_worker:
    build: .
    command: celery -A app.tasks worker --loglevel=info --autoscale=${MAX_WORKERS}:${MIN_WORKERS}
    depends_on:
      - redis
      - postgres
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/logistics
      - REDIS_URL=redis://redis:6379/0
      - KAFKA_URL=kafka:9092
      - MIN_WORKERS=2
      - MAX_WORKERS=10
      - SCALE_UP_THRESHOLD=100
      - SCALE_DOWN_THRESHOLD=10
      - CHECK_INTERVAL=60

  celery_beat:
    build: .
    command: celery -A app.tasks beat --loglevel=info
    depends_on:
      - redis
      - postgres
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/logistics
      - REDIS_URL=redis://redis:6379/0
      - KAFKA_URL=kafka:9092

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: logistics
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:6
    ports:
      - "6379:6379"

  kafka:
    image: wurstmeister/kafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "9092:9092"

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/app/static:ro  # If you have static files
    depends_on:
      - backend

  celery_autoscaler:
    build: .
    command: python app/services/celery_autoscaler.py
    depends_on:
      - redis
      - postgres
      - celery_worker
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - MIN_WORKERS=2
      - MAX_WORKERS=10
      - SCALE_UP_THRESHOLD=100
      - SCALE_DOWN_THRESHOLD=10
      - CHECK_INTERVAL=60

volumes:
  postgres_data:
